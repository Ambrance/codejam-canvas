/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/data/32x32.json":
/*!*****************************!*\
  !*** ./src/data/32x32.json ***!
  \*****************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, default */
/***/ (function(module) {

module.exports = JSON.parse("[[[255,0,0,6],[212,40,26,77],[202,55,38,121],[213,50,32,103],[210,49,33,125],[206,49,34,120],[207,48,34,111],[208,49,33,130],[208,49,35,125],[209,48,33,116],[208,49,34,119],[207,50,34,128],[207,48,33,122],[209,50,33,123],[209,48,33,122],[207,50,34,112],[209,48,35,117],[209,48,33,100],[208,50,35,103],[210,50,33,108],[210,49,34,119],[208,49,34,126],[208,49,34,119],[207,50,33,123],[208,49,34,120],[208,49,32,119],[208,49,34,120],[209,51,34,121],[208,49,33,115],[208,49,35,140],[206,49,33,99],[211,44,33,23]],[[222,33,23,77],[205,47,32,208],[207,51,35,236],[212,49,33,198],[211,49,33,219],[210,49,33,230],[206,49,34,220],[208,49,34,240],[207,49,34,233],[207,49,34,220],[206,49,34,226],[207,49,34,232],[207,49,33,236],[208,49,34,232],[212,49,34,233],[213,49,33,219],[210,49,33,227],[209,49,33,196],[210,48,33,200],[210,49,33,217],[206,49,34,226],[206,49,35,229],[207,49,34,227],[207,49,34,240],[207,49,34,228],[209,49,33,223],[208,49,34,232],[206,49,34,226],[206,49,34,217],[208,49,34,248],[205,49,34,224],[203,49,36,93]],[[200,55,39,143],[215,51,34,227],[175,48,37,225],[137,50,41,242],[156,49,39,238],[179,49,36,249],[181,49,36,249],[170,49,38,247],[169,49,37,247],[175,49,37,246],[179,49,36,247],[194,49,35,243],[202,49,34,250],[181,49,36,247],[179,49,37,250],[173,49,37,248],[181,49,36,250],[178,49,36,244],[169,49,37,243],[165,49,38,250],[174,49,37,246],[179,49,36,243],[181,49,36,248],[177,49,37,253],[178,49,36,247],[178,49,37,246],[174,49,37,249],[174,49,37,245],[172,49,37,245],[176,49,37,243],[201,50,35,242],[208,49,33,131]],[[208,49,35,124],[218,50,33,211],[158,49,39,227],[113,49,44,255],[137,49,41,255],[164,49,38,255],[175,49,37,255],[164,49,38,255],[162,49,38,255],[176,49,37,255],[198,49,34,255],[129,49,42,255],[101,49,45,255],[104,49,45,255],[46,49,51,255],[58,49,50,255],[67,49,49,255],[109,49,44,255],[166,49,37,255],[155,49,39,255],[158,49,39,255],[170,49,37,255],[171,49,37,255],[168,49,37,255],[165,49,38,255],[165,49,38,255],[161,49,38,255],[168,49,38,255],[160,49,39,255],[155,49,39,255],[200,49,35,228],[212,49,34,114]],[[206,49,35,125],[213,49,33,215],[170,49,38,224],[155,49,39,255],[162,49,38,255],[165,49,38,255],[171,49,37,255],[176,49,37,255],[189,49,35,255],[180,49,36,255],[105,49,44,255],[30,49,53,255],[14,49,55,255],[22,49,54,255],[33,49,53,255],[31,49,53,255],[32,49,53,255],[30,49,53,255],[86,49,47,255],[133,49,42,255],[151,49,40,255],[169,49,37,255],[162,49,38,255],[186,49,36,255],[177,49,36,255],[155,49,39,255],[161,49,38,255],[169,49,37,255],[155,49,39,255],[159,49,39,255],[201,49,35,214],[212,48,33,101]],[[205,50,33,123],[209,49,34,222],[188,49,36,233],[171,49,37,255],[176,49,37,255],[174,49,37,255],[164,49,38,255],[179,49,36,255],[178,49,36,255],[63,49,49,255],[18,49,54,255],[38,49,52,255],[43,49,51,255],[109,49,44,255],[146,49,40,255],[148,49,40,255],[84,49,47,255],[34,49,53,255],[34,49,53,255],[32,49,53,255],[52,49,51,255],[61,49,49,255],[41,49,52,255],[114,49,44,255],[171,49,37,255],[160,49,38,255],[161,49,38,255],[157,49,39,255],[149,49,40,255],[160,49,38,255],[204,49,34,218],[211,49,32,104]],[[205,48,33,122],[209,48,33,221],[190,49,36,236],[173,49,37,255],[179,49,37,255],[185,49,36,255],[178,49,36,255],[174,49,37,255],[86,49,47,255],[31,49,53,255],[37,49,52,255],[46,49,51,255],[132,49,41,255],[159,49,38,255],[177,49,36,255],[161,49,38,255],[41,49,52,255],[46,49,51,255],[42,49,52,255],[30,49,53,255],[27,49,53,255],[18,49,54,255],[18,49,54,255],[34,49,53,255],[33,49,53,255],[107,49,44,255],[200,49,34,255],[170,49,37,255],[162,49,38,255],[164,49,38,254],[202,49,34,225],[212,50,34,113]],[[204,49,34,120],[209,49,34,225],[188,49,35,243],[171,49,37,255],[170,49,37,255],[171,49,37,255],[201,49,34,255],[102,49,45,255],[11,49,55,255],[44,49,52,255],[43,49,52,255],[117,49,43,255],[144,49,40,255],[153,49,39,255],[127,49,43,255],[62,49,50,255],[38,49,52,255],[25,49,54,255],[45,49,51,255],[79,49,47,255],[107,49,44,255],[113,49,44,255],[88,49,46,255],[31,49,53,255],[17,49,55,255],[43,49,52,255],[119,49,43,255],[164,49,38,255],[168,49,38,255],[175,49,37,255],[202,49,34,210],[211,49,33,93]],[[205,50,34,128],[210,49,34,227],[184,49,36,235],[178,49,36,255],[182,49,36,255],[79,49,47,255],[44,49,51,255],[34,49,53,255],[49,49,51,255],[31,49,53,255],[95,49,46,255],[181,49,36,255],[136,49,41,255],[184,49,36,255],[78,49,48,255],[9,49,56,255],[34,49,53,255],[115,49,43,255],[167,49,38,255],[187,49,36,255],[175,49,37,255],[190,49,35,255],[199,49,34,255],[144,49,40,255],[73,49,49,255],[16,49,55,255],[25,49,54,255],[133,49,41,255],[168,49,37,255],[171,49,37,254],[200,49,34,217],[212,48,33,101]],[[204,49,34,126],[209,49,34,226],[192,49,36,237],[192,49,35,255],[105,49,45,255],[6,49,56,255],[51,49,51,255],[71,49,48,255],[43,49,52,255],[23,49,53,255],[102,49,45,255],[198,49,34,255],[178,49,37,255],[141,49,41,255],[48,49,51,255],[31,49,53,255],[99,49,45,255],[201,49,34,255],[192,49,35,255],[169,49,38,255],[194,49,34,255],[197,49,34,255],[200,49,34,255],[214,49,32,255],[203,49,34,255],[83,49,47,255],[12,49,55,255],[91,49,46,255],[180,49,36,255],[167,49,38,253],[200,49,34,237],[211,50,33,123]],[[204,48,34,121],[207,48,33,221],[217,49,32,239],[116,49,43,255],[9,49,56,255],[36,49,53,255],[163,49,38,255],[78,49,47,255],[29,49,53,255],[43,49,52,255],[139,49,40,255],[180,49,36,255],[185,49,36,255],[98,49,46,255],[8,49,56,255],[74,49,48,255],[189,49,35,255],[180,49,36,255],[202,49,34,255],[150,49,39,255],[139,49,41,255],[127,49,42,255],[85,49,47,255],[133,49,41,255],[179,49,36,255],[161,49,38,255],[31,49,53,255],[54,49,51,255],[170,49,37,255],[165,49,38,254],[198,49,35,232],[213,49,33,115]],[[206,49,34,129],[217,49,33,235],[184,49,36,241],[46,49,51,255],[16,49,55,255],[111,49,44,255],[214,49,32,255],[129,49,42,255],[33,49,53,255],[38,49,52,255],[159,49,38,255],[188,49,35,255],[187,49,35,255],[108,49,44,255],[6,49,56,255],[105,49,44,255],[215,49,32,255],[173,49,37,255],[91,49,46,255],[53,49,50,255],[19,49,54,255],[17,49,55,255],[15,49,55,255],[38,49,52,255],[43,49,51,255],[65,49,49,255],[50,49,51,255],[53,49,50,255],[158,49,39,255],[152,49,39,255],[196,49,34,193],[216,48,33,85]],[[210,49,34,129],[234,49,31,236],[119,49,44,241],[6,49,56,255],[52,49,51,255],[183,49,36,255],[203,49,34,255],[141,49,41,255],[14,49,55,255],[21,49,54,255],[84,49,47,255],[206,49,33,255],[209,49,33,255],[91,49,46,255],[0,49,57,255],[137,49,41,255],[199,49,34,255],[53,49,50,255],[0,49,58,255],[26,49,53,255],[58,49,50,255],[67,49,49,255],[54,49,50,255],[26,49,54,255],[32,49,53,255],[42,49,52,255],[36,49,52,255],[63,49,49,255],[166,49,38,255],[164,49,38,255],[202,49,36,186],[213,49,33,78]],[[207,48,33,116],[231,48,31,221],[133,49,42,245],[15,49,55,255],[53,49,51,255],[157,49,39,255],[190,49,35,255],[177,49,37,255],[107,49,45,255],[35,49,53,255],[22,48,53,255],[94,49,45,255],[207,49,33,255],[146,49,40,255],[21,49,54,255],[87,49,47,255],[65,49,49,255],[30,49,53,255],[120,49,43,255],[155,49,39,255],[160,49,39,255],[189,49,35,255],[157,49,39,255],[88,49,47,255],[60,49,49,255],[31,49,53,255],[51,49,51,255],[25,49,54,255],[96,49,45,255],[180,49,36,255],[203,50,33,206],[213,48,34,91]],[[210,49,32,119],[231,48,31,195],[113,49,44,210],[20,49,54,255],[29,49,53,255],[128,49,42,255],[193,49,35,255],[171,49,38,255],[189,49,35,255],[84,49,47,255],[26,49,52,255],[6,49,55,255],[70,49,49,255],[176,49,37,255],[93,49,46,255],[23,49,54,255],[22,49,54,255],[92,49,46,255],[175,49,37,255],[193,49,35,255],[208,49,33,255],[175,49,37,255],[155,49,39,255],[161,49,38,255],[170,49,37,255],[64,49,49,255],[30,49,53,255],[36,49,52,255],[75,49,48,255],[174,49,36,255],[205,50,33,206],[212,49,34,89]],[[212,49,34,136],[234,49,31,208],[107,49,44,204],[14,49,55,255],[36,49,52,255],[131,49,41,255],[191,49,35,255],[162,49,38,255],[138,49,41,255],[157,49,39,255],[137,49,41,255],[59,49,50,255],[9,49,55,255],[19,49,54,255],[63,49,49,255],[44,49,51,255],[53,49,51,255],[36,49,52,255],[9,49,55,255],[51,49,51,255],[109,49,44,255],[167,49,37,255],[155,49,39,255],[136,49,41,255],[178,49,36,255],[161,49,38,255],[53,49,51,255],[37,49,52,255],[24,49,54,255],[118,49,43,255],[222,49,32,217],[211,49,33,99]],[[205,50,35,118],[218,49,32,199],[177,49,37,223],[51,49,51,255],[38,49,52,255],[20,49,54,255],[140,49,41,255],[202,49,34,255],[148,49,40,255],[151,49,40,255],[193,49,35,255],[193,49,35,255],[152,49,39,255],[154,49,39,255],[69,49,49,255],[28,49,53,255],[30,49,53,255],[109,49,44,255],[124,49,42,255],[17,49,55,255],[10,49,55,255],[58,49,50,255],[113,49,43,255],[167,49,38,255],[147,49,40,255],[163,49,38,255],[107,49,45,255],[33,49,53,255],[23,49,54,255],[103,49,45,255],[223,49,32,226],[214,50,33,107]],[[205,50,35,118],[215,49,32,189],[183,49,36,210],[54,49,50,255],[39,49,52,255],[36,49,52,255],[47,49,51,255],[127,49,42,255],[190,49,35,255],[192,49,35,255],[196,49,35,255],[197,49,34,255],[197,49,34,255],[119,49,43,255],[23,49,54,255],[63,49,50,255],[41,49,52,255],[85,49,47,255],[196,49,34,255],[163,49,38,255],[60,49,50,255],[3,49,56,255],[52,49,51,255],[175,49,36,255],[173,49,37,255],[167,49,37,255],[152,49,39,255],[41,49,52,255],[22,49,54,255],[100,49,45,255],[221,49,32,220],[217,50,33,101]],[[206,49,34,114],[217,50,33,180],[178,49,37,208],[65,49,49,255],[37,49,52,255],[51,49,51,255],[34,49,53,255],[29,49,53,255],[74,49,48,255],[97,49,45,255],[112,49,44,255],[80,49,48,255],[44,49,52,255],[7,49,55,255],[76,49,48,255],[179,49,36,255],[54,49,50,255],[33,49,53,255],[141,49,40,255],[199,49,34,255],[162,49,38,255],[43,49,52,255],[26,49,53,255],[74,49,48,255],[167,49,38,255],[169,49,38,255],[143,49,40,255],[42,49,52,255],[25,49,54,255],[93,49,46,255],[218,49,32,207],[218,50,34,97]],[[207,48,33,100],[216,49,33,155],[184,49,36,208],[81,49,47,255],[36,49,52,255],[47,49,51,255],[31,49,53,255],[29,49,53,255],[23,49,54,255],[17,49,54,255],[8,49,55,255],[11,49,55,255],[26,49,53,255],[82,49,47,255],[197,49,34,255],[182,49,36,255],[50,49,51,255],[27,49,53,255],[101,49,45,255],[163,49,38,255],[197,49,34,255],[101,49,45,255],[27,49,53,255],[35,49,52,255],[136,49,41,255],[194,49,35,255],[135,49,41,255],[30,49,53,255],[53,49,51,255],[171,49,37,255],[206,49,34,203],[210,48,34,91]],[[206,49,34,104],[216,49,34,182],[181,49,36,222],[50,49,51,255],[20,49,54,255],[84,49,47,255],[136,49,41,255],[123,49,43,255],[55,49,50,255],[70,49,49,255],[78,49,47,255],[90,49,46,255],[160,49,38,255],[187,49,36,255],[210,49,33,255],[138,49,41,255],[29,49,53,255],[48,49,51,255],[131,49,41,255],[146,49,40,255],[180,49,36,255],[132,49,42,255],[33,49,53,255],[28,49,53,255],[101,49,45,255],[196,49,35,255],[69,49,49,255],[15,49,55,255],[56,49,50,255],[181,49,36,255],[204,49,34,224],[209,48,34,106]],[[207,50,35,102],[214,48,33,169],[186,49,36,214],[86,49,47,255],[22,49,54,255],[65,49,49,255],[182,49,36,255],[193,49,35,255],[174,49,37,255],[180,49,37,255],[177,49,37,255],[180,49,36,255],[180,49,37,255],[190,49,35,255],[181,49,36,255],[62,49,49,255],[22,49,54,255],[49,49,51,255],[141,49,40,255],[168,49,37,255],[182,49,36,255],[112,49,44,255],[32,49,53,255],[30,49,53,255],[98,49,46,255],[109,49,44,255],[14,49,55,255],[29,49,53,255],[143,49,40,255],[185,49,36,255],[201,49,34,235],[210,50,34,113]],[[206,49,35,88],[213,49,33,176],[186,49,35,234],[136,49,41,255],[32,49,53,255],[27,49,53,255],[72,49,48,255],[165,49,38,255],[207,49,33,255],[185,49,35,255],[185,49,36,255],[186,49,36,255],[192,49,35,255],[192,49,35,255],[77,49,48,255],[18,49,54,255],[30,49,53,255],[115,49,43,255],[167,49,37,255],[171,49,38,255],[190,49,35,255],[107,49,44,255],[34,49,53,255],[47,49,51,255],[50,49,51,255],[17,49,54,255],[25,49,54,255],[142,49,40,255],[192,49,35,255],[173,49,37,255],[200,49,35,228],[209,49,34,105]],[[207,48,35,117],[211,49,33,224],[186,49,36,243],[169,49,37,255],[85,49,47,255],[35,49,53,255],[29,49,53,255],[54,49,50,255],[138,49,41,255],[160,49,39,255],[161,49,38,255],[167,49,38,255],[121,49,43,255],[52,49,50,255],[40,49,52,255],[28,49,53,255],[59,49,50,255],[178,49,37,255],[178,49,36,255],[186,49,35,255],[175,49,37,255],[47,49,51,255],[40,49,52,255],[46,49,51,255],[20,49,54,255],[74,49,48,255],[151,49,39,255],[200,49,34,255],[174,49,37,255],[178,49,36,254],[202,48,33,221],[208,50,35,103]],[[207,48,33,122],[211,49,33,219],[184,49,36,233],[155,49,39,255],[170,49,37,255],[58,49,50,255],[17,49,54,255],[33,49,53,255],[29,49,53,255],[46,49,51,255],[49,49,51,255],[40,49,52,255],[31,49,53,255],[31,49,53,255],[18,49,55,255],[87,49,46,255],[190,49,35,255],[187,49,36,255],[178,49,37,255],[195,49,35,255],[119,49,43,255],[43,49,52,255],[36,49,52,255],[28,49,53,255],[89,49,46,255],[179,49,36,255],[194,49,35,255],[171,49,37,255],[174,49,37,255],[171,49,37,254],[200,49,34,186],[211,50,34,76]],[[207,48,34,121],[214,49,34,203],[180,48,37,221],[132,49,41,255],[147,49,40,255],[140,49,41,255],[99,49,45,255],[42,49,52,255],[22,49,54,255],[23,49,54,255],[30,49,53,255],[40,49,52,255],[46,49,51,255],[64,49,49,255],[70,49,48,255],[172,49,37,255],[202,49,34,255],[198,49,34,255],[195,49,34,255],[118,49,43,255],[16,49,54,255],[37,49,52,255],[46,49,51,255],[144,49,40,255],[190,49,35,255],[179,49,37,255],[168,49,38,255],[166,49,38,255],[170,49,37,255],[145,49,40,255],[195,48,34,148],[219,47,31,49]],[[206,49,34,104],[217,49,34,167],[163,49,38,209],[116,49,43,255],[129,49,42,255],[136,49,41,255],[177,49,36,255],[132,49,42,255],[73,49,48,255],[102,49,45,255],[72,49,48,255],[43,49,51,255],[32,49,53,255],[74,49,48,255],[135,49,42,255],[152,49,39,255],[129,49,42,255],[119,49,43,255],[64,49,49,255],[40,49,52,255],[30,49,53,255],[8,49,55,255],[97,49,45,255],[198,49,34,255],[158,49,39,255],[171,49,37,255],[149,49,40,255],[162,49,38,255],[178,49,36,255],[137,49,41,255],[195,49,34,156],[219,47,31,49]],[[206,49,35,110],[216,49,33,172],[165,49,39,205],[117,49,43,255],[128,49,42,255],[134,49,41,255],[155,49,39,255],[179,49,36,255],[174,49,37,255],[186,49,36,255],[174,49,37,255],[153,49,39,255],[80,49,47,255],[13,49,55,255],[21,49,54,255],[27,49,53,255],[30,49,53,255],[20,49,54,255],[19,49,54,255],[21,49,54,255],[71,49,48,255],[94,49,46,255],[153,49,39,255],[168,49,37,255],[152,49,39,255],[156,49,39,255],[156,49,39,255],[167,49,38,255],[169,49,37,255],[157,49,39,254],[196,49,35,181],[214,48,33,69]],[[207,48,34,106],[215,49,33,183],[172,49,39,225],[130,49,41,255],[120,49,43,255],[142,49,40,255],[157,49,39,255],[153,49,39,255],[152,49,39,255],[159,49,38,255],[154,49,39,255],[156,49,39,255],[156,49,38,255],[112,49,44,255],[66,49,49,255],[55,49,50,255],[30,49,53,255],[46,49,51,255],[78,49,48,255],[65,49,49,255],[156,49,39,255],[184,49,36,255],[136,49,41,255],[145,49,40,255],[143,49,40,255],[134,49,41,255],[146,49,40,255],[170,49,37,255],[157,49,39,255],[161,49,38,255],[200,48,35,221],[213,50,35,103]],[[205,50,33,122],[210,49,33,217],[184,49,36,235],[160,49,38,252],[155,49,39,245],[163,49,38,255],[157,49,39,253],[157,49,39,248],[158,49,39,255],[161,49,38,251],[157,49,39,249],[153,49,40,248],[156,49,39,245],[168,49,39,245],[154,49,39,248],[155,49,39,243],[136,49,41,252],[155,49,39,254],[191,49,35,252],[189,49,35,252],[175,49,37,255],[156,49,39,244],[145,49,40,248],[159,49,39,248],[151,49,39,247],[156,49,39,252],[150,49,39,250],[166,49,38,249],[166,49,38,255],[163,49,38,255],[202,49,34,252],[212,51,33,131]],[[206,49,34,67],[204,50,34,180],[205,50,34,216],[209,49,33,198],[208,48,34,179],[209,49,33,188],[209,49,34,172],[208,49,34,167],[205,49,34,172],[204,49,34,171],[208,49,34,167],[208,49,33,183],[206,49,34,165],[204,49,33,130],[207,48,34,137],[208,49,34,136],[219,49,32,157],[216,49,33,178],[205,50,34,190],[208,49,34,201],[210,50,33,206],[203,48,33,153],[210,49,33,146],[207,48,34,142],[204,49,33,146],[207,49,34,186],[207,48,34,163],[206,49,34,186],[205,50,34,211],[207,48,33,221],[204,49,34,213],[204,48,32,95]],[[209,46,35,22],[206,49,36,93],[208,49,33,130],[212,50,34,113],[215,50,32,102],[212,48,33,100],[213,48,34,90],[215,48,34,90],[215,49,34,89],[213,48,34,91],[215,49,34,89],[213,50,32,103],[215,49,34,89],[217,51,34,60],[216,47,31,65],[216,50,35,66],[215,50,33,77],[212,51,32,95],[212,50,33,107],[211,48,33,116],[209,48,35,117],[214,50,31,81],[216,50,32,72],[214,49,34,68],[216,50,32,72],[215,50,32,102],[216,48,33,85],[211,49,34,105],[211,48,33,122],[213,50,35,132],[204,48,33,116],[200,49,30,42]]]");

/***/ }),

/***/ "./src/data/4x4.json":
/*!***************************!*\
  !*** ./src/data/4x4.json ***!
  \***************************/
/*! exports provided: 0, 1, 2, 3, default */
/***/ (function(module) {

module.exports = JSON.parse("[[\"00BCD4\",\"FFEB3B\",\"FFEB3B\",\"00BCD4\"],[\"FFEB3B\",\"FFC107\",\"FFC107\",\"FFEB3B\"],[\"FFEB3B\",\"FFC107\",\"FFC107\",\"FFEB3B\"],[\"00BCD4\",\"FFEB3B\",\"FFEB3B\",\"00BCD4\"]]");

/***/ }),

/***/ "./src/data/image.png":
/*!****************************!*\
  !*** ./src/data/image.png ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "./assets/img/image.png";

/***/ }),

/***/ "./src/script.js":
/*!***********************!*\
  !*** ./src/script.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data_image_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data/image.png */ "./src/data/image.png");
/* harmony import */ var _data_image_png__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_data_image_png__WEBPACK_IMPORTED_MODULE_0__);

const data1 = __webpack_require__(/*! ./data/4x4.json */ "./src/data/4x4.json");
const data2 = __webpack_require__(/*! ./data/32x32.json */ "./src/data/32x32.json");
const canvas = document.getElementById('picture');
const ctx = canvas.getContext('2d');
const switherBox = document.querySelector('.canvas-switcher');

function renderImage(data) {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  canvas.style.imageRendering = 'pixelated';
  const colorArr = convertImageData(data);
  canvas.width = canvas.height = data.length;
  const imgData = new ImageData(Uint8ClampedArray.from(colorArr), data.length, data.length);
  ctx.putImageData(imgData, 0, 0);
}

function convertImageData(data) {
  let flattenedRGBAValues;
  let regex = new RegExp('^(?:[A-Fa-f0-9]{3}){1,2}$');
  const flatten = (x, y) => x.concat(y);
  const hexToRGBA = hexStr => [parseInt(hexStr.substr(0, 2), 16), parseInt(hexStr.substr(2, 2), 16), parseInt(hexStr.substr(4, 2), 16), 255];
  if (regex.test(data[0][0])) {
    flattenedRGBAValues = data.reduce(flatten).map(hexToRGBA).reduce(flatten);
  } else {
    flattenedRGBAValues = data.reduce(flatten).reduce(flatten);
  }
  return flattenedRGBAValues;
}

function drawImage() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  canvas.style.imageRendering = 'auto';
  canvas.width = 256;
  canvas.height = 256;
  let pic = new Image();
  pic.src = _data_image_png__WEBPACK_IMPORTED_MODULE_0___default.a;
  pic.onload = function () {
    ctx.drawImage(pic, 0, 0, pic.width, pic.height, 0, 0, canvas.width, canvas.height);
  };
}

switherBox.addEventListener('click', function (evt) {
  const switcherItem = evt.target.closest('.canvas-switcher__item');
  if (switcherItem) {
    switch (switcherItem.firstChild.nextSibling.id) {
      case 'sun':
        renderImage(data1);
        break;
      case 'codewars':
        renderImage(data2);
        break;
      case 'school':
        drawImage();
        break;
    }
  }
});

/***/ }),

/***/ "./src/style.scss":
/*!************************!*\
  !*** ./src/style.scss ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ 0:
/*!**********************************************!*\
  !*** multi ./src/script.js ./src/style.scss ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./src/script.js */"./src/script.js");
module.exports = __webpack_require__(/*! ./src/style.scss */"./src/style.scss");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,